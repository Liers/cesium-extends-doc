"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[904],{59776:function(e,n,a){a.r(n),a.d(n,{demos:function(){return s}});var t,r=a(15009),o=a.n(r),i=a(99289),d=a.n(i),u=a(67294),s={"docs-doc-control-demo-control":{component:u.memo(u.lazy((function(){return a.e(433).then(a.bind(a,30414))}))),asset:{type:"BLOCK",id:"docs-doc-control-demo-control",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:a(39526).Z},react:{type:"NPM",value:"18.3.1"},"cesium163-extends":{type:"NPM",value:"1.0.1"},doc:{type:"NPM",value:"1.0.0"},"./index.less":{type:"FILE",value:a(78145).Z}},entry:"index.tsx"},context:{react:a(67294),"cesium163-extends":a(73061),"@/utils/initMap":a(94145),"./index.less":a(59893)},renderOpts:{compile:(t=d()(o()().mark((function e(){var n,t=arguments;return o()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.e(335).then(a.bind(a,37335));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,t));case 3:case"end":return e.stop()}}),e)}))),function(){return t.apply(this,arguments)})}}}},87724:function(e,n,a){a.r(n),a.d(n,{demos:function(){return t}});a(67294);var t={}},17348:function(e,n,a){a.r(n),a.d(n,{demos:function(){return s}});var t,r=a(15009),o=a.n(r),i=a(99289),d=a.n(i),u=a(67294),s={"docs-doc-measure-demo-measure":{component:u.memo(u.lazy((function(){return a.e(433).then(a.bind(a,18046))}))),asset:{type:"BLOCK",id:"docs-doc-measure-demo-measure",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:a(20450).Z},cesium:{type:"NPM",value:"1.70.0"},react:{type:"NPM",value:"18.3.1"},doc:{type:"NPM",value:"1.0.0"},"cesium163-extends":{type:"NPM",value:"1.0.1"},"./index.less":{type:"FILE",value:a(22078).Z}},entry:"index.tsx"},context:{cesium:a(44155),react:a(67294),"@/utils/initMap":a(94145),"cesium163-extends":a(73061),"./index.less":a(82337)},renderOpts:{compile:(t=d()(o()().mark((function e(){var n,t=arguments;return o()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.e(335).then(a.bind(a,37335));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,t));case 3:case"end":return e.stop()}}),e)}))),function(){return t.apply(this,arguments)})}}}},11903:function(e,n,a){a.r(n),a.d(n,{demos:function(){return s}});var t,r=a(15009),o=a.n(r),i=a(99289),d=a.n(i),u=a(67294),s={"docs-doc-over-viewer-demo-over-viewer":{component:u.memo(u.lazy((function(){return a.e(433).then(a.bind(a,97120))}))),asset:{type:"BLOCK",id:"docs-doc-over-viewer-demo-over-viewer",refAtomIds:[],dependencies:{"index.tsx":{type:"FILE",value:a(38568).Z},react:{type:"NPM",value:"18.3.1"},"cesium163-extends":{type:"NPM",value:"1.0.1"},"../../utils/initMap.ts":{type:"FILE",value:a(43852).Z},cesium:{type:"NPM",value:"1.70.0"},undefined:{type:"NPM"}},entry:"index.tsx"},context:{react:a(67294),"cesium163-extends":a(73061),"../../utils/initMap.ts":a(94145),cesium:a(44155),"cesium/Build/Cesium/Widgets/widgets.css":a(21745)},renderOpts:{compile:(t=d()(o()().mark((function e(){var n,t=arguments;return o()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,a.e(335).then(a.bind(a,37335));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,t));case 3:case"end":return e.stop()}}),e)}))),function(){return t.apply(this,arguments)})}}}},15561:function(e,n,a){a.r(n),a.d(n,{demos:function(){return t}});a(67294);var t={}},94145:function(e,n,a){a.r(n),a.d(n,{initMap:function(){return r}});var t=a(44155);a(21745);function r(e){var n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=new t.Viewer(e,{baseLayerPicker:!1,animation:!1,fullscreenButton:!1,geocoder:!1,infoBox:!1,homeButton:!1,sceneModePicker:!1,selectionIndicator:!1,timeline:!1,navigationHelpButton:!1,shouldAnimate:!0,useBrowserRecommendedResolution:!1,terrainProvider:(0,t.createWorldTerrain)()});r.scene.fog.density=1e-4,r.scene.globe.enableLighting=!1,r.scene.moon.show=!1,r._cesiumWidget._creditContainer.style.display="none",r.scene.debugShowFramesPerSecond=!1,r.scene.skyBox.show=!1;var o=null!==(n=a.home)&&void 0!==n?n:[116.3,39.9,15e6];return r.camera.setView({destination:t.Cartesian3.fromDegrees(o[0],o[1],o[2]),orientation:{heading:t.Math.toRadians(0),pitch:t.Math.toRadians(-90),roll:t.Math.toRadians(0)}}),r}t.Ion.defaultAccessToken="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI4OGQwZTM2MC00NjkzLTRkZTgtYTU5MS0xZTA1NTljYWQyN2UiLCJpZCI6NTUwODUsImlhdCI6MTYyMDM5NjQ3NH0.lu_JBwyngYucPsvbCZt-xzmzgfwEKwcRXiYs5uV8uTM"},59893:function(e,n,a){a.r(n)},82337:function(e,n,a){a.r(n)},29131:function(e,n,a){a.r(n),a.d(n,{texts:function(){return t}});const t=[{value:"一款基于 ",paraId:0,tocIndex:0},{value:"@cesium163-extends/common",paraId:0,tocIndex:0},{value:" 库的",paraId:0,tocIndex:0},{value:"Cesium",paraId:0,tocIndex:0},{value:"控件插件。",paraId:0,tocIndex:0},{value:"npm install @cesium163-extends/control\n",paraId:1,tocIndex:1},{value:"Control",paraId:2,tocIndex:2},{value:" 可在 Cesium 应用程序中用于开启/关闭光照效果。要使用该小部件，首先将其导入到您的项目中：",paraId:2,tocIndex:2},{value:"import Control from '@cesium163-extends/control';\n",paraId:3,tocIndex:2},{value:"接下来，创建小部件的一个新实例并将其传递给您的 Cesium Viewer 实例：",paraId:4,tocIndex:2},{value:"const viewer = new Cesium.Viewer('cesiumContainer');\nconst Control = new Control(viewer);\n",paraId:5,tocIndex:2},{value:"下面的示例中添加了一个开启/关闭光照效果的控件",paraId:6,tocIndex:3},{value:"constructor(viewer: Cesium.Viewer)",paraId:7},{value:"创建一个新的 ",paraId:8,tocIndex:5},{value:"Control",paraId:8,tocIndex:5},{value:" 小部件实例并将其附加到指定的 Cesium Viewer。",paraId:8,tocIndex:5},{value:"viewer",paraId:9,tocIndex:6},{value:": 要将小部件附加到的 Cesium Viewer 实例。",paraId:9,tocIndex:6},{value:"openSun()",paraId:7},{value:"开启光照效果。",paraId:10,tocIndex:7},{value:"closeSun()",paraId:7},{value:"关闭光照效果。",paraId:11,tocIndex:8}]},19105:function(e,n,a){a.r(n),a.d(n,{texts:function(){return t}});const t=[{value:" ",paraId:0},{value:"cesium163-extends 是一个从",paraId:1},{value:"DDE-Earth",paraId:1},{value:"中抽离的、用于 CesiumJS-V1.63 的扩展库，它与前端框架无关，提供了一些常用的功能和组件，方便开发者快速构建 Cesium 应用。",paraId:1},{value:"使用 npm 安装：",paraId:2,tocIndex:0},{value:"npm install cesium163-extends --save\n",paraId:3,tocIndex:0},{value:"cesium163-extends 提供了以下功能：",paraId:4,tocIndex:1},{value:"测量工具 ",paraId:5,tocIndex:1},{value:"@cesium163-extends/measure",paraId:5,tocIndex:1},{value:"鹰眼图 ",paraId:5,tocIndex:1},{value:"@cesium163-extends/over-viewer",paraId:5,tocIndex:1},{value:"控件工具 ",paraId:5,tocIndex:1},{value:"@cesium163-extends/control",paraId:5,tocIndex:1},{value:"...",paraId:5,tocIndex:1},{value:"详细信息及 demo，请参阅 ",paraId:6,tocIndex:1},{value:"API 文档",paraId:6,tocIndex:1},{value:"。",paraId:6,tocIndex:1},{value:"This project is licensed under the MIT License - see the ",paraId:7,tocIndex:2},{value:"LICENSE",paraId:8,tocIndex:2},{value:" file for details.",paraId:7,tocIndex:2}]},39417:function(e,n,a){a.r(n),a.d(n,{texts:function(){return t}});const t=[{value:"@cesium163-extends/measure 是一个基于 Cesium 实现的测量工具，支持方位角测量和三角测量。",paraId:0,tocIndex:0},{value:"通过 npm 安装：",paraId:1,tocIndex:1},{value:"npm install @cesium163-extends/measure --save\n",paraId:2,tocIndex:1},{value:"在项目中引入",paraId:3,tocIndex:2},{value:"@cesium163-extends/measure",paraId:3,tocIndex:2},{value:"模块，然后实例化对应的测量类即可进行测量。",paraId:3,tocIndex:2},{value:"用于方位角距离测量。",paraId:4,tocIndex:3},{value:"import { Viewer } from 'cesium';\nimport { AzimuthAndDistanceMeasure } from '@cesium163-extends/measure';\n\nconst viewer = new Viewer('cesiumContainer');\nconst azimuthAndDistanceMeasure = new AzimuthAndDistanceMeasure(viewer, {\n  onEnd: (entity) => {\n    console.log(entity); // 测量完成回调函数，返回测量结果\n  },\n});\n\n// 开始绘制\nazimuthAndDistanceMeasure.start();\n",paraId:5,tocIndex:3},{value:"用于三角测量。",paraId:6,tocIndex:4},{value:"import { Viewer } from 'cesium';\nimport { TriangleMeasure } from '@cesium163-extends/measure';\n\nconst viewer = new Viewer('cesiumContainer');\nconst TriangleMeasure = new TriangleMeasure(viewer, {\n  onEnd: (entity) => {\n    console.log(entity); // 测量完成回调函数，返回测量结果\n  },\n});\n\n// 开始绘制\nTriangleMeasure.start();\n",paraId:7,tocIndex:4},{value:"你可以通过下面的示例体验测量工具",paraId:8,tocIndex:5},{value:"参数",paraId:9,tocIndex:7},{value:"类型",paraId:9,tocIndex:7},{value:"描述",paraId:9,tocIndex:7},{value:"labelStyle",paraId:9,tocIndex:7},{value:"object",paraId:9,tocIndex:7},{value:"标签样式",paraId:9,tocIndex:7},{value:"units",paraId:9,tocIndex:7},{value:"string",paraId:9,tocIndex:7},{value:"测量单位，默认为'meters'",paraId:9,tocIndex:7},{value:"locale",paraId:9,tocIndex:7},{value:"string",paraId:9,tocIndex:7},{value:"国际化内容",paraId:9,tocIndex:7},{value:"onEnd",paraId:9,tocIndex:7},{value:"function",paraId:9,tocIndex:7},{value:"测量完成回调函数",paraId:9,tocIndex:7},{value:"drawerOptions",paraId:9,tocIndex:7},{value:"object",paraId:9,tocIndex:7},{value:"绘制工具### Measure",paraId:9,tocIndex:7},{value:"测量基类，其他测量类继承自该类。",paraId:10,tocIndex:7},{value:"constructor(viewer: Viewer, options?: MeasureOptions)",paraId:11},{value:"创建一个测量工具实例。",paraId:12,tocIndex:9},{value:"参数：",paraId:13,tocIndex:9},{value:"viewer",paraId:14,tocIndex:9},{value:"：Cesium.Viewer 对象。",paraId:14,tocIndex:9},{value:"options",paraId:14,tocIndex:9},{value:"（可选）：配置项，类型为",paraId:14,tocIndex:9},{value:"MeasureOptions",paraId:14,tocIndex:9},{value:"。",paraId:14,tocIndex:9},{value:"destroyed: boolean",paraId:11},{value:"返回当前测量工具是否已销毁。",paraId:15,tocIndex:11},{value:"mouseTooltip: MouseTooltip",paraId:11},{value:"鼠标提示工具实例。",paraId:16,tocIndex:12},{value:"drawer: Drawer",paraId:11},{value:"绘制工具实例。",paraId:17,tocIndex:13},{value:"start(): void",paraId:11},{value:"开始测量操作。",paraId:18,tocIndex:15},{value:"end(): void",paraId:11},{value:"结束测量操作，并清除测量结果。",paraId:19,tocIndex:16},{value:"destroy(): void",paraId:11},{value:"销毁测量工具。",paraId:20,tocIndex:17},{value:"用于方位角和距离测量。",paraId:21,tocIndex:18},{value:"constructor(viewer: Viewer, options?: MeasureOptions)",paraId:11},{value:"创建一个 AzimuthAndDistanceMeasure 实例。",paraId:22,tocIndex:20},{value:"参数：",paraId:23,tocIndex:20},{value:"viewer",paraId:24,tocIndex:20},{value:"：Cesium.Viewer 对象。",paraId:24,tocIndex:20},{value:"options",paraId:24,tocIndex:20},{value:"（可选）：配置项，类型为",paraId:24,tocIndex:20},{value:"MeasureOptions",paraId:24,tocIndex:20},{value:"。",paraId:24,tocIndex:20},{value:"getDistance(start: Cartesian3, end: Cartesian3): number",paraId:11},{value:"计算两点之间的距离。",paraId:25,tocIndex:22},{value:"参数：",paraId:26,tocIndex:22},{value:"start",paraId:27,tocIndex:22},{value:"：起点坐标，Cartesian3 类型。",paraId:27,tocIndex:22},{value:"end",paraId:27,tocIndex:22},{value:"：终点坐标，Cartesian3 类型。",paraId:27,tocIndex:22},{value:"返回值：两点之间的距离，单位由配置项指定，默认为米。",paraId:28,tocIndex:22},{value:"用于三角测量。",paraId:29,tocIndex:23},{value:"constructor(viewer: Viewer, options?: MeasureOptions)",paraId:11},{value:"创建一个 TriangleMeasure 实例。",paraId:30,tocIndex:25},{value:"参数：",paraId:31,tocIndex:25},{value:"viewer",paraId:32,tocIndex:25},{value:"：Cesium.Viewer 对象。",paraId:32,tocIndex:25},{value:"options",paraId:32,tocIndex:25},{value:"（可选）：配置项，类型为",paraId:32,tocIndex:25},{value:"MeasureOptions",paraId:32,tocIndex:25},{value:"。",paraId:32,tocIndex:25},{value:"本工具基于 Cesium 实现，需要在项目中引入 Cesium 库。",paraId:33,tocIndex:26},{value:"使用前请确保了解 Cesium 的基础知识，如何创建 Viewer 等。",paraId:33,tocIndex:26},{value:"应当在使用测量工具前先停止其他可能影响交互的操作，例如相机漫游、场景旋转等。",paraId:33,tocIndex:26},{value:"在使用过程中请注意浏览器的性能，过多的绘制可能会导致浏览器崩溃或卡顿。",paraId:33,tocIndex:26}]},47691:function(e,n,a){a.r(n),a.d(n,{texts:function(){return t}});const t=[{value:"@cesium163-extends/over-viewer",paraId:0,tocIndex:0},{value:" 是一个用于加载鹰眼图控件的 npm 包。",paraId:0,tocIndex:0},{value:"npm install @cesium163-extends/over-viewer\n",paraId:1,tocIndex:1},{value:"import { Viewer } from 'cesium';\nimport OverViewer from '@cesium163-extends/over-viewer';\n\nconst leftViewer = new Viewer('left-container');\n// 鹰眼图HTML容器\nconst overViewerContainerID = 'overview-container';\n\nconst syncViewer = new OverViewer(parentViewer.current, overViewerContainerID);\n\n// 销毁\nsyncViewer.destroy();\n",paraId:2,tocIndex:2},{value:"下面的示例演示了鹰眼图效果",paraId:3,tocIndex:3},{value:"SyncViewProps",paraId:4},{value:"属性名",paraId:5,tocIndex:4},{value:"类型",paraId:5,tocIndex:4},{value:"描述",paraId:5,tocIndex:4},{value:"percentageChanged",paraId:5,tocIndex:4},{value:"number",paraId:5,tocIndex:4},{value:"相机 zoom 改变时距离改变的百分比，默认为 ",paraId:5,tocIndex:4},{value:"0.01",paraId:5,tocIndex:4},{value:"。",paraId:5,tocIndex:4},{value:"OverViewer",paraId:4},{value:"constructor(parentViewer: Viewer, overViewerContainerID: string, options?: SyncViewProps)\n",paraId:6,tocIndex:6},{value:"parentViewer",paraId:7,tocIndex:6},{value:": 父 Viewer 实例。",paraId:7,tocIndex:6},{value:"overViewerContainerID",paraId:7,tocIndex:6},{value:": 鹰眼图 Viewer 承载容器ID。",paraId:7,tocIndex:6},{value:"options",paraId:7,tocIndex:6},{value:" (可选): 配置项，包括：\n",paraId:7,tocIndex:6},{value:"percentageChanged",paraId:8,tocIndex:6},{value:": 相机 zoom 改变时距离改变的百分比，默认为 ",paraId:8,tocIndex:6},{value:"0.01",paraId:8,tocIndex:6},{value:"。",paraId:8,tocIndex:6},{value:"start()",paraId:4},{value:"开始同步左右 Viewer 视图。",paraId:9,tocIndex:8},{value:"start(): void\n",paraId:10,tocIndex:8},{value:"destroy()",paraId:4},{value:"销毁实例，并解除视图同步。",paraId:11,tocIndex:9},{value:"destroy(): void\n",paraId:12,tocIndex:9},{value:"synchronous",paraId:4},{value:"获取或设置是否进行视图同步。",paraId:13,tocIndex:11},{value:"synchronous: boolean;\n",paraId:14,tocIndex:11},{value:"isDestory",paraId:4},{value:"获取实例是否已销毁。",paraId:15,tocIndex:12},{value:"get isDestory(): boolean\n",paraId:16,tocIndex:12}]},2687:function(e,n,a){a.r(n),a.d(n,{texts:function(){return t}});const t=[]},78145:function(e,n){n.Z="#cesiumContainer {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    overflow: hidden;\n    .draw-tools {\n      position: absolute;\n      left: 10px;\n      top: 10px;\n      z-index: 1;\n      padding: 4px;\n      background-color: white;\n      button {\n        margin: 4px;\n      }\n    }\n  }"},39526:function(e,n){n.Z="import { Viewer } from 'cesium';\nimport React, { useEffect, useRef } from 'react';\nimport { Control } from 'cesium163-extends';\n\nimport { initMap } from '@/utils/initMap';\nimport './index.less';\n\ninterface MapProps {}\n\nconst Map: React.FC<MapProps> = () => {\n  const viewer = useRef<Viewer>();\n  const control = useRef<Control>();\n\n  useEffect(() => {\n    viewer.current = initMap('cesiumContainer', {home: [116.3, 39.9, 25000000]});\n\n    return () => {\n      viewer.current?.destroy();\n    };\n  }, []);\n\n  return (\n    <div id=\"cesiumContainer\">\n      <div className=\"draw-tools\">\n        <button\n          onClick={() => {\n            if (!control.current) {\n              control.current = new Control(viewer.current as Viewer);\n            }\n            control.current.openSun();\n          }}\n        >\n          开启光照\n        </button>\n        <button\n          onClick={() => {\n            if (!control.current) {\n              control.current = new Control(viewer.current as Viewer);\n            }\n            control.current.closeSun();\n          }}\n        >\n          关闭光照\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Map;"},22078:function(e,n){n.Z="#cesiumContainer {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n  .draw-tools {\n    position: absolute;\n    left: 10px;\n    top: 10px;\n    z-index: 1;\n    padding: 4px;\n    background-color: white;\n    button {\n      margin: 4px;\n    }\n  }\n}\n"},20450:function(e,n){n.Z="import { Cartesian3, Viewer, Math as CMath, LabelCollection } from 'cesium';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { initMap } from '@/utils/initMap';\nimport {\n  AzimuthAndDistanceMeasure,\n  TriangleMeasure,\n  Measure,\n} from 'cesium163-extends';\nimport './index.less';\n\ninterface MapProps {}\n\nconst measureOptions: {\n  label: string;\n  key: string;\n  tool: typeof Measure;\n}[] = [\n  {\n    label: '方位角距离测量',\n    key: 'Distance',\n    tool: AzimuthAndDistanceMeasure,\n  },\n  {\n    label: '三角测量',\n    key: 'Triangle',\n    tool: TriangleMeasure,\n  },\n];\n\nconst Map: React.FC<MapProps> = () => {\n  const viewer = useRef<Viewer>();\n  const measure = useRef<Measure>();\n\n  const onChangeTool = (\n    name: string | null,\n    Tool: typeof Measure | null = null,\n  ) => {\n    if (!viewer.current) return;\n\n    if (name && Tool) {\n      measure.current = new Tool(viewer.current, {\n        units: 'kilometers',\n        locale: {\n          start: '起点',\n          formatAngle: (angle) => {\n            return `角度: ${angle}°`;\n          },\n          formatLength: (length, unitedLength) => {\n            const prefix = '距离:';\n            if (length < 1000) {\n              return prefix + length + '米';\n            }\n            return prefix + unitedLength + '公里';\n          },\n        },\n        drawerOptions: {\n          tips: {\n            init: '点击绘制',\n            start: '左键添加点，双击结束绘制',\n          },\n        },\n      });\n      measure.current.start();\n    }\n  };\n\n  useEffect(() => {\n    viewer.current = initMap('cesiumContainer');\n\n    viewer.current.camera.setView({\n      destination: Cartesian3.fromDegrees(138.43, 35.21, 5000),\n      orientation: {\n        heading: CMath.toRadians(0),\n        pitch: CMath.toRadians(-15),\n        roll: CMath.toRadians(0),\n      },\n    });\n\n    return () => {\n      measure.current?.destroy();\n      measure.current = undefined;\n      viewer.current?.destroy();\n    };\n  }, []);\n\n  const clear = () => {\n    measure.current?.end();\n    const labelCollections: LabelCollection[] = [];\n    const length = viewer.current?.scene.primitives.length;\n    if (length) {\n      for (let i = 0; i < length; i++) {\n        const primitive = viewer.current?.scene.primitives.get(i);\n        if (primitive instanceof LabelCollection && primitive.length > 0) {\n          labelCollections.push(primitive);\n        }\n      }\n    }\n    labelCollections.forEach((item) => {\n      viewer.current?.scene.primitives.remove(item);\n    });\n\n    viewer.current?.entities.removeAll();\n  };\n\n  return (\n    <div id=\"cesiumContainer\">\n      <div className=\"draw-tools\">\n        {measureOptions.map((item) => (\n          <button\n            key={item.key}\n            onClick={() => onChangeTool(item.key, item.tool)}\n          >\n            {item.label}\n          </button>\n        ))}\n        <button onClick={clear}>清除</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n"},38568:function(e,n){n.Z="import { Viewer } from 'cesium';\nimport React, { useEffect, useRef } from 'react';\nimport { OverViewer } from 'cesium163-extends';\n\nimport { initMap } from '../../utils/initMap';\n\ninterface MapProps {}\n\nconst Map: React.FC<MapProps> = () => {\n  const parentViewer = useRef<Viewer>();\n  const overView = useRef<OverViewer>();\n\n  useEffect(() => {\n    parentViewer.current = initMap('parent-container');\n    const overViewerContainerID = 'overview-container';\n\n    if (parentViewer.current && overViewerContainerID) {\n      overView.current = new OverViewer(\n        parentViewer.current,\n        overViewerContainerID,\n      );\n      overView.current.start();\n    }\n\n    return () => {\n      parentViewer.current?.destroy();\n      overView.current?.destroy();\n    };\n  }, []);\n\n  return (\n    <div\n      className=\"over-viewer\"\n      style={{ width: '100%', height: '100%', display: 'flex' }}\n    >\n      <div id=\"parent-container\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n        <div\n          id=\"overview-container\"\n          style={{\n            position: 'absolute',\n            zIndex: 9,\n            width: '150px',\n            height: '150px',\n            bottom: '10px',\n            right: '10px',\n            padding: '10px',\n            background: 'rgba(0, 0, 0, 0.5)',\n            color: '#fff',\n            borderRadius: '5px',\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n"},43852:function(e,n){n.Z="import { Viewer, Cartesian3, Math as CMath, Ion, Cesium3DTileset, CesiumTerrainProvider, createWorldTerrain } from 'cesium';\n\nimport 'cesium/Build/Cesium/Widgets/widgets.css';\n\nIon.defaultAccessToken =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI4OGQwZTM2MC00NjkzLTRkZTgtYTU5MS0xZTA1NTljYWQyN2UiLCJpZCI6NTUwODUsImlhdCI6MTYyMDM5NjQ3NH0.lu_JBwyngYucPsvbCZt-xzmzgfwEKwcRXiYs5uV8uTM';\n\n/**\n * 初始化地图\n * @param cesiumContainer 地图容器div id\n */\nexport function initMap(cesiumContainer: string, options: {\n  home?: number[]\n} = {}) {\n  const viewer: Viewer = new Viewer(cesiumContainer, {\n    baseLayerPicker: false, // 图层选择器\n    animation: false, // 左下角仪表\n    fullscreenButton: false, // 全屏按钮\n    geocoder: false, // 右上角查询搜索\n    infoBox: false, // 信息框\n    homeButton: false, // home按钮\n    sceneModePicker: false, // 3d 2d选择器\n    selectionIndicator: false, //\n    timeline: false, // 时间轴\n    navigationHelpButton: false, // 右上角帮助按钮\n    shouldAnimate: true,\n    useBrowserRecommendedResolution: false,\n    terrainProvider: createWorldTerrain(),\n  });\n  // viewer.terrainProvider = new CesiumTerrainProvider({\n  //   url : 'https://assets.agi.com/stk-terrain/world',\n  // });\n\n  viewer.scene.fog.density = 0.0001; // 雾气中水分含量\n  viewer.scene.globe.enableLighting = false;\n  viewer.scene.moon.show = false; // 不显示月球\n  // @ts-ignore\n  viewer._cesiumWidget._creditContainer.style.display = 'none';\n  viewer.scene.debugShowFramesPerSecond = false;\n  viewer.scene.skyBox.show = false;\n\n  const home = options.home ?? [116.3, 39.9, 15000000]\n\n  viewer.camera.setView({\n    destination: Cartesian3.fromDegrees(home[0], home[1], home[2]),\n    orientation: {\n      heading: CMath.toRadians(0),\n      pitch: CMath.toRadians(-90),\n      roll: CMath.toRadians(0),\n    },\n  });\n\n  return viewer;\n};\n"}}]);